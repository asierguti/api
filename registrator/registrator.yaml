openapi: 3.0.1
info:
  description: Сервис регистрации и управления учетными записями
  version: 1.0.0
  title: Registrator
tags:
  - name: admin
    description: Admin only requests
  - name: client
    description: Client's requests
servers:
  - url: 'http://lex2vec.ru:{port}/registrator/v1'
    description: Sandbox for tests
    variables:
      port:
        enum:
          - '80'
          - '8081'
        default: '8081'
paths:
  '/admin/{adminID}':
    post:
      tags:
        - admin
      summary: Add admin
      description: Returns admins's ID and secret key
      operationId: addClient
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: adminID
          description: ID of admin to manage records
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              name: test client
              description: some test client
              email: somebody@yandex.ru
              status: active
              role: admin
      responses:
        200:
          $ref: '#/components/responses/200Credentials'
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
  '/admin/{adminID}/client':
    post:
      tags:
        - admin
      summary: Add a client
      description: Returns client's ID and secret key
      operationId: addClient
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: adminID
          description: ID of admin to manage records
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              name: test client
              description: some test client
              email: somebody@yandex.ru
              status: active
              role: user
      responses:
        200:
          $ref: '#/components/responses/200Credentials'
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
  '/admin/{adminID}/client/clientID/{clientID}':
    patch:
      tags:
        - admin
      summary: Update some client
      description: Returns client's ID and secret key
      operationId: addClient
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: adminID
          description: ID of admin to manage records
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: 10N4G86FCAADWVPVZ1BU
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              name: test client
              description: some test client
              email: somebody@yandex.ru
              status: active
              credentials:
                secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
              role: user
      responses:
        204:
          $ref: '#/components/responses/204'
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
    delete:
      tags:
        - admin
      summary: Delete some client
      description: Delete requested client
      operationId: addClient
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: adminID
          description: admin's ID to manage records
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: 10N4G86FCAADWVPVZ1BU
      responses:
        204:
          $ref: '#/components/responses/204'
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
  '/admin/{adminID}/client/clientID/{clientID}/secretKey':
    get:
      tags:
        - admin
      summary: Get the client's secret key
      description: Returns secret key
      operationId: getSecretKey
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: adminID
          description: ID of admin to manage records
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
              example:
                secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
    patch:
      tags:
        - admin
      summary: Generate a new client's secret key
      description: Returns new secret key
      operationId: generateSecretKey
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: adminID
          description: ID of admin to manage records
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
              example:
                secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'

  '/client/clientID/{clientID}':
    get:
      tags:
        - client
      summary: Get client's info
      description: Returns all clients data
      operationId: getClient
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client'
              example:
                id: 1
                name: test
                descrition: some test client
                email: somebody@yandex.ru
                status: active
                credentials:
                  clientID: EPEOD4UKRNSSNTCF6NP0
                  secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
                role: user
                registration_date: "2018-12-01 12:00:00.999999"
                lastmodified_date: "2018-12-01 12:00:00.999999"
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
    patch:
      tags:
        - client
      summary: Update client's info
      description: Returns all clients data
      operationId: getClient
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
            example:
              name: test client
              description: some test client
      responses:
        204:
          $ref: '#/components/responses/204'
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
  '/client/clientID/{clientID}/secretKey':
    get:
      tags:
        - client
      summary: Get the client's secret key
      description: Returns secret key
      operationId: getSecretKey
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
              example:
                secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'
    patch:
      tags:
        - client
      summary: Generate a new client's secret key
      description: Returns new secret key
      operationId: generateSecretKey
      parameters:
        - $ref: '#/components/parameters/X-Request-ID'
        - $ref: '#/components/parameters/X-SERVICE-NAME'
        - in: path
          name: clientID
          description: client's ID
          required: true
          schema:
            type: string
          example: EPEOD4UKRNSSNTCF6NP0
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
              example:
                secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
        4XX:
          $ref: '#/components/responses/4XX'
        5XX:
          $ref: '#/components/responses/5XX'

components:
  schemas:
    Credentials:
      type: object
      required:
        - clientID
        - secretKey
      properties:
        clientID:
          type: string
          example: auto generated client's ID
        secretKey:
          type: string
          example: auto generated client's secret
      xml:
        name: ClientCredentials
    Client:
      type: object
      required:
        - name
        - description
        - status
        - role
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: somename
        description:
          type: string
          example: some description
        email:
          type: string
          example: somebody@yandex.ru
        credentials:
          $ref: '#/components/schemas/Credentials'
        status:
          type: string
          description: client status in the store
          enum:
            - new
            - active
            - blocked
            - deleted
          example: active
        role:
          type: string
          description: client system role
          enum:
            - admin
            - user
          example: user
        registration_date:
          type: string
          format: date-time
          description: client's registration datetime
        lastmodified_date:
          type: string
          format: date-time
          description: client's last modified
      xml:
        name: ClientModel
    Error:
      type: object
      properties:
        error:
          type: integer
          format: int32
          minimum: 400
          maximum: 600
          example: 400
        message:
          type: string
  parameters:
    X-Request-ID:
      name: X-Request-ID
      in: header
      schema:
        type: string
        format: uuid
      required: true
      example: "8dff7ffa-f4be-11e8-8eb2-f2801f1b9fd1"
    X-SERVICE-NAME:
      name: X-SERVICE-NAME
      in: header
      schema:
        type: string
      required: true
      example: test
  responses:
    200Credentials:
      description: Ok
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Credentials'
          example:
            clientID: EPEOD4UKRNSSNTCF6NP0
            secretKey: U2Vs2N2wCHubC3NUKLE5zfrkiLDhvLPTxPNQl5qH
    204:
      description: No Content
    4XX:
      description: Some Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 4XX
            message: error description
    5XX:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: 5XX
            message: unexpected error

